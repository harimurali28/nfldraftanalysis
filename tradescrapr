trade_scrape<-function(startyr,endyr = 2017) {
  master <- data.frame()
  for(i in startyr:endyr) {
    
    ##### Url to scrape from, i is year so multiple years can be scrapped
    url <- paste0("https://www.spotrac.com/nfl/transactions/",i,"/trade/")
    
    #Reading the HTML code from the website
    webpage <- read_html(url)
    ###First Getting logo x_nodes so I can match specific team to each trade
    #Using CSS selectors to scrape the rankings section
    trade_data_html <- html_nodes(webpage,'.tradelogo')
    
    
    #Using CSS selectors to scrape the rankings section
    trade_team_html <- html_nodes(webpage,'.tradedata')
    
    #Converting the ranking data to text
    trade_team <- html_text(trade_team_html)
    
    #Let's have a look at the rankings
    head(trade_team)
    
    #### Pull trade details into a data frame have to do this first so can combine logo df to get team abbreviations
    trade_tracker <- data.frame(Team = substr(trade_team, 1, 5), Trade = substring(trade_team, regexpr("acquires", trade_team) + 8), Year = i)
    
    #### building data frame from logo attributes
    trade_data <- trade_data_html %>% 
      map(xml_attrs) %>% 
      map_df(~as.list(.))
    
    ###getting rid of similar pattern on attribute and keeping unique indentifier and 4 letter of it
    trade_data <- trade_data %>% mutate(Team_html = substr(str_remove(src, "https://d1dglpr230r57l.cloudfront.net/images/thumb/"),1,4))
    
    
    ####combining logo data on main data frame
    trade_tracker <- trade_tracker %>% cbind(trade_data[,c(4)])
    
    ####cleaning up trade data now
    trade_tracker <- trade_tracker %>%  mutate(Trade_picks =gsub("[\\(\\)]", "", regmatches(Trade, gregexpr("\\(.*?\\)", Trade))),
                                               Trade_id = ifelse(Year == 2015 & row_number() > 25, paste0(ceiling((row_number()-1)/2),Year), paste0(ceiling(row_number()/2),Year)))  %>% 
      select(Trade_id, everything()) 
    trade_tracker$Trade <- as.character(trade_tracker$Trade)
    trade_tracker$Trade_picks <- ifelse(startsWith(trade_tracker$Trade_picks, "$") | startsWith(trade_tracker$Trade_picks, "character0"),NA,trade_tracker$Trade_picks)
    trade_tracker <- trade_tracker %>% mutate(Player_Traded = ifelse(grepl("^[0-9]", Trade),NA,gsub("\\(.*","",Trade)),
                                              Picks_Traded = str_extract_all(trade_tracker$Trade_picks, "\\#[[:digit:]]{1,}"))
    trade_tracker_join <- trade_tracker %>% unnest(Picks_Traded) %>% select(c("Trade_id", "Team", "Picks_Traded"))
    
    
    trade_tracker <-left_join(trade_tracker, trade_tracker_join, by = c("Trade_id","Team"))
    trade_tracker <- trade_tracker[,c(1:7,9)] 
    colnames(trade_tracker)[8] <- "Picks_Traded"
    
    trade_tracker$Player_Traded <- str_extract(trade_tracker$Player_Traded, "[^\\d]+")
    trade_tracker$Player_Traded <-gsub("([[:lower:]][[:lower:]])([[:upper:]][[:lower:]])", "\\1, \\2",trade_tracker$Player_Traded)
    master %<>%
      bind_rows(trade_tracker)
    
  }
  #### builds dataframe with abbreviatiopns for ease of use with other scrapers I have Made
  scrape_abrv <- c("ariz","falc","rave","buff","pant","bear","beng","brow","dall","bron","lion","pack","texa","colt","jagu","kans","dolp","viki",
                   "patr","newo","nygi","jets","oakl","eagl","Pitt","rams","char","49er","hawk","bucs","tenn","wash","NFL_","rams")
  
  team_abrv <- c("ARI","ATL","BAL","BUF","CAR","CHI","CIN","CLE","DAL","DEN","DET","GNB","HOU","IND","JAX","KAN",
                 "MIA","MIN","NWE","NOR","NYG","NYJ","OAK","PHI","PIT","LAR","LAC","SFO","SEA","TAM","TEN","WAS","LAC","LAR")
  trade_abrv <- data.frame(scrape_team = scrape_abrv, abrv = team_abrv)
  ###Joing dataframe with abbreviations
  master <- master %>% left_join(trade_abrv, by = c("Team_html" = "scrape_team"))
  master <- subset(master, select=c(Trade_id,abrv,Team:Picks_Traded))
  ###GEtting rid of two other team identifier
  master <- master %>% select(-c(3,6))
  master$Picks_Traded <- as.numeric(str_sub(master$Picks_Traded,2))
  return(master)
}


#######Example
###To get trades from 2006-2016
Trades <- trade_scrape(2006,2016)

